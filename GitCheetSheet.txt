#) Check Your git Version -> To check git version ,you can run the following comand:
   git --version
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#) Repository :- A Repository is a collection of files and directories that are stored together. It is a way to store and  manage your code . It just like a normal folder.
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#) Your config settings :- Github has a lot of settings that you can change. You can change your username, email, and other settings. Whenever you checkpoint your changes, git 
will add some information about your such as your username and email to the commit.

config file that stores all the settings that you have changed. You can make settings like what editor you would like to use etc. There are some global settings and some 
repository specific settings.

Letâ€™s setup your email and username in this config file.-

Command for configration your setup for login into git-

git config --global user.email "your-email@example.com"
git config --global user.name "Your Name"


Now you can check your config settings:----
git config --list

This will show you all the settings that you have changed.

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#) Creating a repository : - Creating a repository is a process of creating a new folder on your system and initializing it as a git repository. Itâ€™s just regular folder to 
     code your project, you are just asking git to track it. To create a repository, you can use the following command:

Command: - 
git status
git init

*) git status :-  command will show you the current state of your repository.
*) git init :- command will create a new folder on your system and initialize it as a git repository. This adds a hidden .git folder to your project.
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#) Commit :- commit is a way to save your changes to your repository. It is a way to record your changes and make them permanent. You can think of a commit as a snapshot of 
   your code at a particular point in time. When you commit your changes, you are telling git to save them in a permanent way. This way, you can always go back to that point in 
   time and see what you changed.

Flow like:-     Write -->Add -->Commit 


#) Complete git flow :-- When you want to track a new folder, you first use init command to create a new repository. Then you can use add command to add the folder to the 
repository. After that you can use commit command to save the changes. Finally you can use push command to push the changes to github. Of course there is more to it but this is 
the basic flow.
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#) Stage :- Stage is a way to tell git to track a particular file or folder. Following command for use :
   
                 >>git init
                 >>git add <file> <file2>
                 >>git status

Here we are initializing the repository and adding a file to the repository. Then we can see that the file is now being tracked by git. Currently our files are in staging area, 
this means that we have not yet committed the changes but are ready to be committed.


#) Commit :-  Here we are committing the changes to the repository. We can see that the changes are now committed to the repository. The -m flag is used to add a message to the 
commit.


>>git commit -m "commit message"
>>git status





























